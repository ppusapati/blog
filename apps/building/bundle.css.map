{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Chip.svelte",
    "../../Header.svelte",
    "../../Icon.svelte",
    "../../NavigationDrawer.svelte",
    "../../ProgressCircular.svelte",
    "../../ProgressLinear.svelte",
    "../../Ripple.svelte",
    "../../Snackbar.svelte",
    "../../Label.svelte",
    "../../Underline.svelte",
    "../../Tooltip.svelte",
    "../../AutoComplete.svelte",
    "../../File.svelte",
    "../../Waypoint.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import { scale } from \"svelte/transition\";\n  import createRipple from \"../Ripple/ripple.js\";\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  import Icon from \"../Icon\";\n\n  let className = \"\";\n  export {className as class};\n  export let removable = false;\n  export let icon = \"\";\n  export let outlined = false;\n  export let selected = false;\n  export let selectable = true;\n  export let color = \"primary\";\n  export let remove = \"\";\n  export let add = \"\";\n  export let replace = {};\n\n  $: ripple = createRipple(color);\n\n  let value = true;\n\n  const dispatch = createEventDispatcher();\n\n  function close() {\n    dispatch(\"close\");\n    value = false;\n  }\n\n  function select() {\n    if (!selectable) return;\n\n    selected = true;\n  }\n\n  const { bg, txt, border } = utils(color);\n\n  const cb = new ClassBuilder();\n\n  $: classes = cb\n    .flush()\n    .add('relative overflow-hidden flex items-center rounded-full px-2 py-1')\n    .add('bg-transparent border', outlined)\n    .add('border-gray-400 border-solid hover:bg-gray-50 dark-hover:bg-dark-400 bg-gray-300 dark:bg-dark-600', !selected)\n    .add(`${border()} dark:${border('800')} ${txt()} ${bg(100)} hover:${bg(50)}`, selected)\n    .remove(remove)\n    .replace(replace)\n    .add(add)\n    .get();\n\n  const props = filterProps([\n    'removable',\n    'icon',\n    'outlined',\n    'selected',\n    'selectable',\n    'color',\n  ], $$props);\n\n  $: iconClass = selected ? `hover:${bg(300)} ${bg(400)}` : \"hover:bg-gray-400 bg-gray-500 dark:bg-gray-800\";\n\n   $: c = cb\n      .flush()\n      .add(className)\n      .get();\n</script>\n\n<style>\n  .p-1\\/2 {\n    padding: 0.125rem;\n  }\n</style>\n\n{#if value}\n  <span class=\"{c} mx-1 inline-block\" out:scale={{ duration: 100 }}>\n    <button\n      class={classes}\n      on:click\n      use:ripple\n      {...props}\n      on:click={select}>\n      {#if icon}\n        <Icon small class={selected ? txt(400) : 'text-gray-600'}>\n          {icon}\n        </Icon>\n      {/if}\n      <span class=\"px-2 text-sm\">\n        <slot />\n      </span>\n      {#if removable}\n        <span\n          class=\"rounded-full p-1/2 inline-flex items-center cursor-pointer {iconClass}\"\n          on:click|stopPropagation={close}>\n          <Icon class=\"text-white dark:text-white\" xs>clear</Icon>\n        </span>\n      {/if}\n    </button>\n  </span>\n{/if}\n",
    "<script>\n  import { ClassBuilder } from \"../../utils/classes.js\";\n  import { createEventDispatcher } from \"svelte\";\n  import Icon from \"../Icon\";\n\n  const classesDefault = \"capitalize transition-fast text-gray-600 text-xs hover:text-black dark-hover:text-white p-3 font-normal text-right\";\n\n  let className = \"\";\n  export let classes = classesDefault;\n  export {className as class};\n\n  export let column = {};\n  export let asc = false;\n  export let sortBy = false;\n  export let sortable = true;\n  export let editing = false;\n\n  const dispatch = createEventDispatcher();\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add(className)\n    .get();\n</script>\n\n<style>\n  th .asc {\n    transform: rotate(180deg);\n  }\n</style>\n\n<th\n  class={c}\n  class:cursor-pointer={sortable || column.sortable}\n  on:click={() => {\n    if (column.sortable === false || !sortable) return;\n    dispatch(\"sort\", column);\n\n    editing = false;\n    asc = sortBy === column ? !asc : false;\n    sortBy = column;\n  }}\n>\n  <div class=\"sort-wrapper flex items-center justify-end\">\n    {#if sortable && column.sortable !== false}\n      <span class=\"sort\" class:asc={!asc && sortBy === column}>\n        <Icon small color=\"text-gray-400 dark:text-gray-100\">arrow_downward</Icon>\n      </span>\n    {/if}\n    <span>{column.label || column.field}</span>\n  </div>\n</th>",
    "<script>\n  let className = \"\";\n  export {className as class};\n  export let small = false;\n  export let xs = false;\n  export let reverse = false;\n  export let tip = false;\n  export let color = \"default\";\n</script>\n\n<style>\n  .reverse {\n    transform: rotate(180deg);\n  }\n\n  .tip {\n    transform: rotate(90deg);\n  }\n</style>\n\n<i\n  aria-hidden=\"true\"\n  class=\"material-icons icon text-xl {className} transition\"\n  class:reverse\n  class:tip\n  on:click\n  class:text-base={small}\n  class:text-xs={xs}\n  style={color ? `color: ${color}` : ''}>\n  <slot />\n</i>\n",
    "<script>\n  import { fly } from \"svelte/transition\";\n  import { quadIn } from \"svelte/easing\";\n  import { Scrim } from \"../Util\";\n  import breakpoints from \"../../breakpoints\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const bp = breakpoints();\n\n  const classesDefault = \"fixed top-0 md:mt-16 w-auto drawer overflow-hidden h-full\";\n  const navClassesDefault = `h-full w-full bg-white dark:bg-gray-900 dark:text-gray-200 absolute flex w-auto z-20 drawer\n    pointer-events-auto overflow-y-auto`;\n\n  export let right = false;\n  export let persistent = false;\n  export let elevation = true;\n  export let show = true;\n  export let classes = classesDefault;\n  export let navClasses = navClassesDefault;\n  export let borderClasses = `border-gray-600 ${right ? \"border-l\" : \"border-r\"}`;\n\n  let className = \"\";\n  export {className as class};\n\n  export let transitionProps = {\n    duration: 200,\n    x: -300,\n    easing: quadIn,\n    opacity: 1,\n  };\n\n  $: transitionProps.x = right ? 300 : -300;\n  $: persistent = show = $bp !== \"sm\";\n\n  const cb = new ClassBuilder(classes, classesDefault);\n\n  if ($bp === 'sm') show = false;\n\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add(borderClasses, !elevation && persistent)\n    .add(className)\n    .add(\"right-0\", right)\n    .add(\"left-0\", !right)\n    .add(\"pointer-events-none\", persistent)\n    .add(\"z-50\", !persistent)\n    .add(\"elevation-4\", elevation)\n    .add(\"z-20\", persistent)\n    .get();\n\n  const ncb = new ClassBuilder(navClasses, navClassesDefault);\n\n  $: n = ncb\n    .flush()\n    .get();\n\n</script>\n\n<style>\n  .drawer {\n    min-width: 250px;\n  }\n\n  aside {\n    height: 100vh;\n  }\n</style>\n  \n{#if show}\n  <aside\n    class={c}\n    transition:fly={transitionProps}\n  >\n    {#if !persistent}\n      <Scrim on:click={() => show = false} />\n    {/if}\n    <nav\n      role=\"navigation\"\n      class={n}\n    >\n      <div class=\"w-full\">\n        <slot />\n      </div>\n    </nav>\n  </aside>\n{/if}\n",
    "<script>\n  export let progress = null;\n  export let color = \"primary\";\n  export let width = 3;\n  export let size = 70;\n\n  $: style = progress > 0 ? `\n      animation: none;\n      stroke-dasharray: ${150000 - progress * 1000};\n      stroke-dashoffset: -${124 - (progress * 124) / 100};\n    ` : \"\";\n</script>\n\n<style>\n  .circular {\n    animation: rotate 2s linear infinite;\n    position: relative;\n  }\n\n  .path {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0;\n    stroke-linecap: round;\n    animation: dash 1.5s ease-in-out infinite;\n  }\n\n  @keyframes rotate {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  @keyframes dash {\n    0% {\n      stroke-dasharray: 1, 200;\n      stroke-dashoffset: 0;\n    }\n    50% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -35;\n    }\n    100% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -124;\n    }\n  }\n</style>\n\n<svg class=\"circular\" style=\"width: {size}px; height: {size}px;\">\n  <circle\n    class=\"path stroke-{color}\"\n    cx={size / 2}\n    cy={size / 2}\n    fill=\"none\"\n    r={(size / 2) - (size / 5)}\n    stroke-width={width}\n    stroke-miterlimit=\"10\"\n    {style} />\n</svg>\n",
    "<script>\n  import { onMount } from \"svelte\";\n  import { slide } from \"svelte/transition\";\n\n  export let app = false;\n  export let progress = 0;\n  export let color = \"primary\";\n\n  let initialized = false;\n\n  onMount(() => {\n    if (!app) return;\n\n    setTimeout(() => {\n      initialized = true;\n    }, 200);\n  });\n</script>\n\n<style>\n  /* kudos https://codepen.io/shalimano/pen/wBmNGJ */\n  .inc {\n    animation: increase 2s ease-in-out infinite;\n  }\n  .dec {\n    animation: decrease 2s 0.9s ease-in-out infinite;\n  }\n\n  @keyframes increase {\n    from {\n      left: -5%;\n      width: 5%;\n    }\n    to {\n      left: 130%;\n      width: 150%;\n    }\n  }\n  @keyframes decrease {\n    from {\n      left: -90%;\n      width: 90%;\n    }\n    to {\n      left: 110%;\n      width: 10%;\n    }\n  }\n</style>\n\n<div\n  class:fixed={app}\n  class:z-50={app}\n  class=\"top-0 left-0 w-full h-1 bg-{color}-100 overflow-hidden relative\"\n  class:hidden={app && !initialized}\n  transition:slide={{ duration: 300 }}>\n  <div\n    class=\"bg-{color}-500 h-1 absolute\"\n    class:inc={!progress}\n    class:transition={progress}\n    style={progress ? `width: ${progress}%` : \"\"} />\n  <div class=\"bg-{color}-500 h-1 absolute dec\" class:hidden={progress} />\n</div>\n",
    "<script>\n  export let color = \"primary\";\n  export let noHover = false;\n  import createRipple from \"../Ripple/ripple.js\";\n  let className = \"p-2\";\n  export {className as class};\n\n\n  $: ripple = createRipple(color, true);\n  $: hoverClass = `hover:bg-${color}-transLight`;\n</script>\n\n<style>\n  .ripple {\n    position: absolute !important;\n  }\n</style>\n\n<span\n  use:ripple\n  class=\"z-40 {className} rounded-full flex items-center justify-center top-0 left-0 {noHover ? \"\" : hoverClass}\">\n  <slot />\n</span>\n",
    "<script context=\"module\">\n  import { writable } from \"svelte/store\";\n  \n  const queue = writable([]);\n  let running = false;\n</script>\n\n<script>\n  import { fade, scale } from \"svelte/transition\";\n  import { createEventDispatcher } from \"svelte\";\n\n  import { quadOut, quadIn } from \"svelte/easing\";\n  import Button from \"../Button\";\n  import { Spacer } from \"../Util\";\n  import utils, { ClassBuilder } from \"../../utils/classes.js\";\n\n  export let value = false;\n  export let timeout = 2000;\n  export let inProps = { duration: 100, easing: quadIn };\n  export let outProps = { duration: 100, easing: quadOut, delay: 150 };\n  export let color = \"gray\";\n  export let text = \"white\";\n  export let top = false;\n  export let bottom = true;\n  export let right = false;\n  export let left = false;\n  export let noAction = true;\n  export let hash = false;\n\n  const dispatch = createEventDispatcher();\n\n  const classesDefault = `pointer-events-auto flex absolute py-2 px-4 z-30 mb-4 content-between mx-auto\n      rounded items-center elevation-2 h-12`;\n  const wrapperDefault = \"fixed w-full h-full flex items-center justify-center pointer-events-none\";\n\n  let className = classesDefault;\n  export {className as class};\n  export let classes = wrapperDefault;\n\n  const cb = new ClassBuilder(className, classesDefault);\n  const wrapperCb = new ClassBuilder(classes, wrapperDefault);\n\n  let wClasses = i => i;\n  let tm;\n  let node;\n\n  let bg = () => {};\n\n  $: {\n    const u = utils(color || \"gray\");\n    bg = u.bg;\n  }\n\n  $: {\n    hash = hash || (value ? btoa(`${value}${new Date().valueOf()}`) : null);\n    value = value;\n  }\n\n  $: toggler = () => toggle(value, hash);\n\n  $: if (value) {\n    queue.update(u => [...u, toggler]);\n  }\n\n  $: if (!running && value && $queue.length) {\n    $queue.shift()();\n  }\n\n  $: if (!value) clearTimeout(tm);\n\n  function toggle(h, id) {\n    if (value === false && running === false) {\n      return;\n    }\n    hash = running = value = id;\n\n    if (!timeout) return;\n\n    tm = setTimeout(() => {\n      value = running = hash = false;\n      dispatch(\"finish\");\n\n      if ($queue.length) {\n        $queue.shift()();\n      }\n    }, timeout);\n  }\n\n  $: c = cb\n      .flush()\n      .add(bg(800), color)\n      .add(\"right-0 mr-2\", right)\n      .add(\"top-0 mt-2\", top)\n      .add(\"left-0 ml-2\", left)\n      .add(\"bottom-0\", bottom)\n      .add(\"snackbar\", !noAction)\n      .get();\n\n  // for some reason it doesn't get updated otherwise\n  $: if (node) node.classList = c;\n\n  wClasses = wrapperCb\n    .flush()\n    .add(`text-${text}`)\n    .get();\n</script>\n\n<style>\n  .snackbar {\n    min-width: 344px;\n  }\n</style>\n\n{#if value && (running === hash)}\n  <div\n    class=\"fixed w-full h-full top-0 left-0 z-30 pointer-events-none\"\n  >\n    <div class={wClasses}>\n      <div\n        bind:this={node}\n        in:scale={inProps}\n        out:fade={outProps}\n        on:click={() => value = false}>\n        <slot /> \n        {#if !noAction}\n          <Spacer />\n          <slot name=\"action\">\n            {#if !timeout}\n              <Button text on:click={() => value = false}>Close</Button>\n            {/if}\n          </slot>\n        {/if}\n      </div>\n    </div>\n  </div>\n{/if}\n",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  let className = \"\";\n  export {className as class};\n  export let focused = false;\n  export let error = false;\n  export let outlined = false;\n  export let labelOnTop = false;\n  export let prepend = false;\n  export let color = \"primary\";\n  // for outlined button label\n  export let bgColor = \"white\";\n\n  let labelDefault = `pt-4 absolute top-0 label-transition block pb-2 px-4 pointer-events-none cursor-text`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let labelClasses = labelDefault;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(labelClasses, labelDefault);\n\n  let lClasses = i => i;\n\n  $: lClasses = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('text-error-500', focused && error)\n      .add('label-top text-xs', labelOnTop)\n      .remove('pt-4 pb-2 px-4 px-1 pt-0', labelOnTop && outlined)\n      .add(`ml-3 p-1 pt-0 mt-0 bg-${bgColor} dark:bg-dark-500`, labelOnTop && outlined)\n      .remove('px-4', prepend)\n      .add('pr-4 pl-10', prepend)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'color'\n  ], $$props);\n</script>\n\n<style>\n.label-top {\n  line-height: 0.05;\n}\n.label-transition {\n  transition: font-size 0.05s, line-height 0.1s;\n}\n</style>\n\n<label class=\"{lClasses} {className}\" {...props}>\n  <slot />\n</label>",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  let className = \"\";\n  export {className as class};\n  export let noUnderline = false;\n  export let outlined = false;\n  export let focused = false;\n  export let error = false;\n  export let color = \"primary\";\n\n  let defaultClasses = `mx-auto w-0`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let lineClasses = defaultClasses;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(lineClasses, defaultClasses);\n\n  let Classes = i => i;\n\n  $: classes = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('bg-error-500', error)\n      .add('w-full', focused || error)\n      .add(bg(), focused)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'bgcolor',\n    'color'\n  ], $$props);\n</script>\n\n<style>\n.line {\n  height: 1px;\n}\n</style>\n\n<div\n  class=\"line absolute bottom-0 left-0 w-full bg-gray-600 {className}\"\n  class:hidden={noUnderline || outlined}>\n  <div\n    class=\"{classes}\"\n    style=\"height: 2px; transition: width .2s ease\" />\n</div>",
    "<script>\n  import { scale, fade } from \"svelte/transition\";\n  import { ClassBuilder } from \"../../utils/classes.js\";\n\n  const classesDefault = \"tooltip whitespace-no-wrap text-xs absolute mt-2 bg-gray-600 text-gray-50 rounded md:px-2 md:py-2 py-4 px-3 z-30\";\n  let className = \"\";\n  export let classes = classesDefault;\n\n  export {className as class};\n  export let show = false;\n\n  export let timeout = null;\n\n  const cb = new ClassBuilder(classes, classesDefault);\n  $: c = cb\n    .flush()\n    .add(classes, true, classesDefault)\n    .add(className)\n    .get();\n\n  function showTooltip() {\n    if (show) return;\n\n    show = true;\n\n    if (!timeout) return;\n\n    timeout = setTimeout(() => {\n      show = false;\n    }, timeout);\n  }\n\n  function hideTooltip() {\n    if (!show) return;\n    \n    show = false;\n    clearTimeout(timeout);\n  }\n\n  function debounce(func, wait, immediate) {\n    let timeout;\n    return function() {\n      let context = this,\n        args = arguments;\n      let later = function() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      let callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n</script>\n\n<style>\n.tooltip {\n  left: 50%;\n  transform: translateX(-50%);\n}\n</style>\n\n<div class=\"relative inline-block\">\n  <div\n    on:mouseenter={debounce(showTooltip, 100)}\n    on:mouseleave={debounce(hideTooltip, 500)}\n    on:mouseenter\n    on:mouseleave\n    on:mouseover\n    on:mouseout\n  >\n    <slot name=\"activator\" />\n  </div>\n\n  {#if show}\n    <div\n      in:scale={{ duration: 150 }}\n      out:scale={{ duration: 150, delay: 100 }}\n      class={c}\n    >\n      <slot />\n    </div>\n  {/if}\n</div>",
    "<script>\n  import { createEventDispatcher, onMount } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = false;\n  export let name = \"\";\n  export let placeholder = \"Tap here...\";\n  export let multiple = false;\n  export let loadItemes = [];\n  let items = loadItemes;\n  let itemsFiltered = [];\n  let itemsSelected = [];\n  let hideListItems = true;\n  let useFilter = false;\n  let value = null;\n\n  const dispatch = createEventDispatcher();\n\n  // Select item.\n  const onSelectItem = item => {\n    hideListItems = true;\n    const oldSelected = itemsSelected.filter(s => s.id === item.id);\n    if (oldSelected.length === 0) {\n      itemsSelected = [...itemsSelected, item];\n      items = items.filter(i => i.id != item.id);\n    }\n    if (useFilter) {\n      itemsFiltered = items;\n    }\n\n    // Affect values.\n    dispatch(\"changeValue\", {\n      name: name,\n      value: itemsSelected\n    });\n\n    value = \"\";\n  };\n\n  // Delete tag\n  const deleteTag = item => {\n    itemsSelected = itemsSelected.filter(i => i.id != item.id);\n    items = [...items, item];\n    if (useFilter) {\n      itemsFiltered = items;\n    }\n\n    // Affect values.\n    dispatch(\"changeValue\", {\n      name: name,\n      value: itemsSelected\n    });\n  };\n\n  // Clear all items selected.\n  function clearAll() {\n    itemsSelected = [];\n    items = loadItemes;\n    if (useFilter) {\n      itemsFiltered = items;\n    }\n\n    // Affect values.\n    dispatch(\"changeValue\", {\n      name: name,\n      value: itemsSelected\n    });\n  }\n\n  // Filter item.\n  const onFilter = e => {\n    const keyword = e.target.value;\n    if (keyword.length > 2) {\n      hideListItems = false;\n      const filtered = items.filter(entry => {\n        return Object.values(entry).some(\n          val => typeof val === \"string\" && val.includes(keyword)\n        );\n      });\n      if (filtered.length > 0) {\n        itemsFiltered = filtered;\n      }\n      useFilter = true;\n    }\n  };\n</script>\n\n<style>\n  .select-container {\n    border: solid 1px #dddddd;\n    border-radius: 4px;\n    height: auto;\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .select-container input {\n    border: none;\n    padding: 0 15px;\n    height: 40px;\n    width: 100%;\n    /* position: absolute; */\n    box-sizing: border-box;\n  }\n  .items-container {\n    box-shadow: 0 2px 3px 0 rgba(44, 62, 80, 0.24);\n    background: #ffffff;\n    border-radius: 0 0 5px 5px;\n    overflow-y: auto;\n    position: absolute;\n    top: 0;\n    z-index: 2;\n    width: 100%;\n  }\n  .items-container .item,\n  .item-selected {\n    height: 40px;\n    line-height: 40px;\n    padding: 0 20px;\n    overflow: hidden;\n  }\n  .items-container .item:first-child,\n  .items-container .item:hover {\n    background-color: #fbd5c8;\n    cursor: pointer;\n  }\n  .item-selected,\n  .clear-all {\n    position: absolute;\n    z-index: 2;\n  }\n  .item-selected {\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .clear-all {\n    right: 20px;\n    width: 20px;\n    height: 40px;\n    cursor: pointer;\n  }\n  .clear {\n    cursor: pointer;\n  }\n  .tag {\n    background-color: #ddd;\n    border-radius: 15px;\n    height: 25px;\n    line-height: 25px;\n    margin: 8px 5px;\n    padding: 0 30px 0 10px;\n    position: relative;\n    display: flex;\n    flex-wrap: wrap;\n  }\n  .tag .clear {\n    box-shadow: 0 2px 3px 0 rgba(44, 62, 80, 0.24);\n    border-radius: 50%;\n    width: 15px;\n    height: 15px;\n    padding: 2px;\n    position: absolute;\n    right: 5px;\n    top: 3px;\n    background-color: #ff3e00;\n  }\n  .tag .clear:hover {\n    background-color: #fbd5c8;\n  }\n  .tag .clear svg {\n    fill: white;\n    vertical-align: top;\n  }\n  input:focus {\n    outline: none;\n  }\n  /* .spinner-wrapper {\n    width: 30px;\n    position: absolute;\n    right: 0;\n    top: 5px;\n    margin: 0 5px;\n  }\n  .spinner {\n    animation: rotate 1.4s linear infinite;\n    -webkit-animation: rotate 1.4s linear infinite;\n    -moz-animation: rotate 1.4s linear infinite;\n    width: 30px;\n    height: 30px;\n    position: relative;\n  }\n  .spinner-dot {\n    width: 274px;\n    height: 274px;\n    position: relative;\n    top: 0;\n  } */\n  /* @keyframes rotate {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes rotate {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-moz-keyframes rotate {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n  .path {\n    stroke-dasharray: 170;\n    stroke-dashoffset: 20;\n  } */\n</style>\n\n<div class=\"select-container\">\n  <!-- Selected item and clear button -->\n  {#if itemsSelected.length > 0}\n    {#each itemsSelected as itemSelected}\n      <div class=\"item-selected {multiple ? 'tag' : ''}\">\n        <span>{itemSelected.title}</span>\n        {#if multiple}\n          <div class=\"clear\" on:click={() => deleteTag(itemSelected)}>\n            <svg\n              width=\"100%\"\n              height=\"100%\"\n              viewBox=\"-2 -2 50 50\"\n              focusable=\"false\">\n              <path\n                d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n                l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\" />\n            </svg>\n          </div>\n        {/if}\n      </div>\n    {/each}\n    <div class=\"clear-all\" on:click={clearAll}>\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        viewBox=\"-2 -2 50 50\"\n        focusable=\"false\"\n        role=\"presentation\"\n        class=\"svelte-e3bo9s\">\n        <path\n          fill=\"currentColor\"\n          d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n          l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\" />\n      </svg>\n    </div>\n  {/if}\n\n  <!-- <div class=\"spinner-wrapper\">\n    <svg\n      class=\"spinner\"\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 0 66 66\"\n      xmlns=\"http://www.w3.org/2000/svg\">\n      <circle\n        class=\"path\"\n        fill=\"transparent\"\n        stroke-width=\"2\"\n        cx=\"33\"\n        cy=\"33\"\n        r=\"30\"\n        stroke=\"url(#gradient)\">\n        <linearGradient id=\"gradient\">\n          <stop offset=\"50%\" stop-color=\"#42d179\" stop-opacity=\"1\" />\n          <stop offset=\"65%\" stop-color=\"#42d179\" stop-opacity=\".5\" />\n          <stop offset=\"100%\" stop-color=\"#42d179\" stop-opacity=\"0\" />\n        </linearGradient>\n      </circle>\n      <svg\n        class=\"spinner-dot dot\"\n        width=\"5px\"\n        height=\"5px\"\n        viewBox=\"0 0 66 66\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        x=\"37\"\n        y=\"1.5\">\n        <circle class=\"path\" fill=\"#42d179\" cx=\"33\" cy=\"33\" r=\"30\" />\n      </svg>\n    </svg>\n  </div> -->\n\n  <!-- Input to autocomplete -->\n  <input\n    {id}\n    type=\"text\"\n    spellcheck=\"false\"\n    autocorrect=\"off\"\n    autocomplete=\"off\"\n    {placeholder}\n    on:keyup={onFilter}\n    bind:value />\n\n  <!-- List items -->\n  {#if !hideListItems}\n    <div style=\"position: relative; width: 100%;\">\n      <div class=\"items-container\">\n        {#if useFilter}\n          {#each itemsFiltered as item}\n            <div\n              class=\"item\"\n              on:click={() => {\n                onSelectItem(item);\n              }}>\n              <span>{item.title}</span>\n            </div>\n          {/each}\n        {:else}\n          {#each items as item}\n            <div\n              class=\"item\"\n              on:click={() => {\n                onSelectItem(item);\n              }}>\n              <span>{item.title}</span>\n            </div>\n          {/each}\n        {/if}\n      </div>\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  import clsx from \"clsx\";\n  // Declar variables.\n  export let id = \"\";\n  export let name = \"\";\n  export let classe = \"\";\n  export let disabled = null;\n  export let multiple = false;\n  export let showPreview = false;\n  let files = [];\n  const dispatch = createEventDispatcher();\n  // Change value field.\n  function onChangerValue(event) {\n    files = Array.from(event.target.files);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: files\n    });\n  }\n\n  // Delete file.\n  function deleteFile(file) {\n    files = files.filter(i => i.name != file.name);\n    dispatch(\"changeValue\", {\n      name: name,\n      value: files\n    });\n  }\n</script>\n\n<style>\n  .list-files .file {\n    display: flex;\n  }\n  .list-files .file .img,\n  .list-files .file .infos {\n    width: 50%;\n  }\n  .list-files .file .img img {\n    width: 100%;\n  }\n</style>\n\n<input\n  type=\"file\"\n  {id}\n  {name}\n  class={clsx(classe)}\n  {disabled}\n  {multiple}\n  on:input={onChangerValue} />\n\n{#if showPreview}\n  {#if files}\n    {#each files as file, i}\n      <div class=\"list-files\">\n        <div class=\"file\">\n          <div class=\"img\">\n            <img src={window.URL.createObjectURL(file)} alt={file.name} />\n          </div>\n          <div class=\"infos\">\n            <ul>\n              <li>Name: {file.name}</li>\n              <li>Size: {file.size}</li>\n              <li>Type: {file.type}</li>\n              <li>\n                <button\n                  type=\"button\"\n                  on:click|preventDefault={() => {\n                    deleteFile(file);\n                  }}>\n                  Remove\n                </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    {/each}\n  {/if}\n{/if}\n",
    "<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let offset = 0;\n  export let throttle = 250;\n  export let c = '';\n  export let style = '';\n  export let once = true;\n  export let threshold = 1.0;\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let visible = disabled;\n  let wasVisible = false;\n  let intersecting = false;\n  let removeHandlers = () => {};\n\n  function throttleFn(fn, time) {\n    let last, deferTimer;\n\n    return () => {\n      const now = +new Date;\n\n      if (last && now < last + time) {\n        // hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          last = now;\n          fn();\n        }, time);\n      } else {\n        last = now;\n        fn();\n      }\n    };\n  }\n\n  function callEvents(wasVisible, observer, node) {\n    if (visible && !wasVisible) {\n      dispatch('enter');\n      return;\n    }\n\n    if (wasVisible && !intersecting) {\n      dispatch('leave');\n    }\n\n    if (once && wasVisible && !intersecting) {\n      removeHandlers();\n    }\n  }\n\n  function waypoint(node) {\n    if (!window || disabled) return;\n\n    if (window.IntersectionObserver && window.IntersectionObserverEntry) {\n      const observer = new IntersectionObserver(([ { isIntersecting } ]) => {\n        wasVisible = visible;\n\n        intersecting = isIntersecting;\n\n        if (wasVisible && once && !isIntersecting) {\n          callEvents(wasVisible, observer, node);\n          return;\n        }\n\n        visible = isIntersecting;\n\n        callEvents(wasVisible, observer, node);\n      }, {\n        rootMargin: offset + 'px',\n        threshold,\n      });\n\n      observer.observe(node);\n\n      removeHandlers = () => observer.unobserve(node);\n\n      return removeHandlers;\n    }\n\n    function checkIsVisible() {\n      // Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93\n      if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;\n\n      let top;\n      let height;\n\n      try {\n        ({ top, height } = node.getBoundingClientRect());\n      } catch (e) {\n        ({ top, height } = defaultBoundingClientRect);\n      }\n\n      const windowInnerHeight = window.innerHeight\n        || document.documentElement.clientHeight;\n\n      wasVisible = visible;\n      intersecting = (top - offset <= windowInnerHeight) &&\n        (top + height + offset >= 0);\n\n      if (wasVisible && once && !isIntersecting) {\n        callEvents(wasVisible, observer, node);\n        return;\n      }\n\n      visible = intersecting;\n\n      callEvents(wasVisible);\n    }\n\n    checkIsVisible();\n\n    const throttled = throttleFn(checkIsVisible, throttle);\n\n    window.addEventListener('scroll', throttled);\n    window.addEventListener('resize', throttled);\n\n    removeHandlers = () => {\n      window.removeEventListener('scroll', throttled);\n      window.removeEventListener('resize', throttled);\n    }\n\n    return removeHandlers;\n  }\n</script>\n\n<style>\n.wrapper {\n  display: inline-block;\n}\n</style>\n\n<div class=\"wrapper {className} {c}\" {style} use:waypoint>\n  {#if visible}\n    <slot />\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}